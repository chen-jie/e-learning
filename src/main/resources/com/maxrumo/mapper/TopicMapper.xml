<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.maxrumo.mapper.TopicMapper">
  <resultMap id="BaseResultMap" type="com.maxrumo.entity.Topic">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="course_id" jdbcType="INTEGER" property="courseId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="last_reply_time" jdbcType="TIMESTAMP" property="lastReplyTime" />
    <result column="author" jdbcType="VARCHAR" property="author" />
    <result column="author_id" jdbcType="INTEGER" property="authorId" />
    <result column="view_count" jdbcType="INTEGER" property="viewCount" />
    <result column="reply_count" jdbcType="INTEGER" property="replyCount" />
    <result column="is_top" jdbcType="INTEGER" property="isTop" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.maxrumo.entity.Topic">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, course_id, title, create_time, last_reply_time, author, author_id, view_count, 
    reply_count, is_top
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.maxrumo.entity.TopicExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from topic
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.maxrumo.entity.TopicExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from topic
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from topic
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from topic
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.maxrumo.entity.Topic">
    insert into topic (id, course_id, title, 
      create_time, last_reply_time, author, 
      author_id, view_count, reply_count, 
      is_top, content)
    values (#{id,jdbcType=INTEGER}, #{courseId,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{lastReplyTime,jdbcType=TIMESTAMP}, #{author,jdbcType=VARCHAR}, 
      #{authorId,jdbcType=INTEGER}, #{viewCount,jdbcType=INTEGER}, #{replyCount,jdbcType=INTEGER}, 
      #{isTop,jdbcType=INTEGER}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.maxrumo.entity.Topic">
    insert into topic
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="courseId != null">
        course_id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="lastReplyTime != null">
        last_reply_time,
      </if>
      <if test="author != null">
        author,
      </if>
      <if test="authorId != null">
        author_id,
      </if>
      <if test="viewCount != null">
        view_count,
      </if>
      <if test="replyCount != null">
        reply_count,
      </if>
      <if test="isTop != null">
        is_top,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="courseId != null">
        #{courseId,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastReplyTime != null">
        #{lastReplyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="author != null">
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="authorId != null">
        #{authorId,jdbcType=INTEGER},
      </if>
      <if test="viewCount != null">
        #{viewCount,jdbcType=INTEGER},
      </if>
      <if test="replyCount != null">
        #{replyCount,jdbcType=INTEGER},
      </if>
      <if test="isTop != null">
        #{isTop,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.maxrumo.entity.TopicExample" resultType="java.lang.Integer">
    select count(*) from topic
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.maxrumo.entity.Topic">
    update topic
    <set>
      <if test="courseId != null">
        course_id = #{courseId,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastReplyTime != null">
        last_reply_time = #{lastReplyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="author != null">
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="authorId != null">
        author_id = #{authorId,jdbcType=INTEGER},
      </if>
      <if test="viewCount != null">
        view_count = #{viewCount,jdbcType=INTEGER},
      </if>
      <if test="replyCount != null">
        reply_count = #{replyCount,jdbcType=INTEGER},
      </if>
      <if test="isTop != null">
        is_top = #{isTop,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.maxrumo.entity.Topic">
    update topic
    set course_id = #{courseId,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      last_reply_time = #{lastReplyTime,jdbcType=TIMESTAMP},
      author = #{author,jdbcType=VARCHAR},
      author_id = #{authorId,jdbcType=INTEGER},
      view_count = #{viewCount,jdbcType=INTEGER},
      reply_count = #{replyCount,jdbcType=INTEGER},
      is_top = #{isTop,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.maxrumo.entity.Topic">
    update topic
    set course_id = #{courseId,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      last_reply_time = #{lastReplyTime,jdbcType=TIMESTAMP},
      author = #{author,jdbcType=VARCHAR},
      author_id = #{authorId,jdbcType=INTEGER},
      view_count = #{viewCount,jdbcType=INTEGER},
      reply_count = #{replyCount,jdbcType=INTEGER},
      is_top = #{isTop,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>