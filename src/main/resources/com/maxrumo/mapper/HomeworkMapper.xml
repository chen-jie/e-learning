<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.maxrumo.mapper.HomeworkMapper">
  <resultMap id="BaseResultMap" type="com.maxrumo.entity.Homework">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="chapter_id" jdbcType="INTEGER" property="chapterId" />
    <result column="chapter_name" jdbcType="VARCHAR" property="chapterName" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="attachment" jdbcType="VARCHAR" property="attachment" />
    <result column="create_time" jdbcType="DATE" property="createTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="course_id" jdbcType="INTEGER" property="courseId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.maxrumo.entity.Homework">
    <result column="description" jdbcType="LONGVARCHAR" property="description" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, chapter_id, chapter_name, name, attachment, create_time, end_time, course_id
  </sql>
  <sql id="Blob_Column_List">
    description
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.maxrumo.entity.HomeworkExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from homework
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.maxrumo.entity.HomeworkExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from homework
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from homework
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from homework
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.maxrumo.entity.Homework" useGeneratedKeys="true" keyProperty="id">
    insert into homework (id, chapter_id, chapter_name, 
      name, attachment, create_time, 
      end_time, course_id, description
      )
    values (#{id,jdbcType=INTEGER}, #{chapterId,jdbcType=INTEGER}, #{chapterName,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{attachment,jdbcType=VARCHAR}, #{createTime,jdbcType=DATE}, 
      #{endTime,jdbcType=TIMESTAMP}, #{courseId,jdbcType=INTEGER}, #{description,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.maxrumo.entity.Homework">
    insert into homework
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="chapterId != null">
        chapter_id,
      </if>
      <if test="chapterName != null">
        chapter_name,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="attachment != null">
        attachment,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="courseId != null">
        course_id,
      </if>
      <if test="description != null">
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="chapterId != null">
        #{chapterId,jdbcType=INTEGER},
      </if>
      <if test="chapterName != null">
        #{chapterName,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="attachment != null">
        #{attachment,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=DATE},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="courseId != null">
        #{courseId,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        #{description,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.maxrumo.entity.HomeworkExample" resultType="java.lang.Integer">
    select count(*) from homework
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.maxrumo.entity.Homework">
    update homework
    <set>
      <if test="chapterId != null">
        chapter_id = #{chapterId,jdbcType=INTEGER},
      </if>
      <if test="chapterName != null">
        chapter_name = #{chapterName,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="attachment != null">
        attachment = #{attachment,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=DATE},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="courseId != null">
        course_id = #{courseId,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.maxrumo.entity.Homework">
    update homework
    set chapter_id = #{chapterId,jdbcType=INTEGER},
      chapter_name = #{chapterName,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      attachment = #{attachment,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=DATE},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      course_id = #{courseId,jdbcType=INTEGER},
      description = #{description,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.maxrumo.entity.Homework">
    update homework
    set chapter_id = #{chapterId,jdbcType=INTEGER},
      chapter_name = #{chapterName,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      attachment = #{attachment,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=DATE},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      course_id = #{courseId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>